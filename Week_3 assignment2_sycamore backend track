// Question_; Create a promise- based functionfetchweather() that simulates featching weather information for lagos. chain multiple .then() calls to process the result
// Simulated fetchWeather function
function fetchWeather() {
    return new Promise((resolve, reject) => {
        // Simulating an API call with a timeout
        setTimeout(() => {
            const weatherData = {
                city: 'Lagos',
                temperature: 30, // in Celsius
                condition: 'Sunny',
                humidity: 60, // in percentage
            };

            // Simulating successful fetch
            resolve(weatherData);
        }, 2000); // simulating a 2 seconds delay
    });
}

// Using the fetchWeather function
fetchWeather()
    .then(weather => {
        console.log(`Weather in ${weather.city}:`);
        console.log(`Temperature: ${weather.temperature}Â°C`);
        console.log(`Condition: ${weather.condition}`);
        console.log(`Humidity: ${weather.humidity}%`);
        return weather.temperature; // pass temperature to the next then
    })
    .then(temperature => {
        if (temperature > 25) {
            console.log('It\'s a warm day, consider wearing light clothes!');
        } else {
            console.log('It\'s a cool day, maybe wear a jacket.');
        }
    })
    .catch(error => {
        console.error('Error fetching weather data:', error);
    });
